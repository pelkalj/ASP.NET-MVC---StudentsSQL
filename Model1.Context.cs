//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Students.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Praksa_Nov_2019Entities : DbContext
    {
        public Praksa_Nov_2019Entities()
            : base("name=Praksa_Nov_2019Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Student_Pelka> Student_Pelka { get; set; }
    
        

            internal object Where(Func<object, bool> p)
        {
            throw new NotImplementedException();
        }

        public virtual ObjectResult<InsertZaduzenjaSaTryCatchNata_Result> InsertZaduzenjaSaTryCatchNata(Nullable<System.Guid> idPredmeta, Nullable<System.Guid> idProfesora, Nullable<System.Guid> idAsistenta)
        {
            var idPredmetaParameter = idPredmeta.HasValue ?
                new ObjectParameter("IdPredmeta", idPredmeta) :
                new ObjectParameter("IdPredmeta", typeof(System.Guid));
    
            var idProfesoraParameter = idProfesora.HasValue ?
                new ObjectParameter("IdProfesora", idProfesora) :
                new ObjectParameter("IdProfesora", typeof(System.Guid));
    
            var idAsistentaParameter = idAsistenta.HasValue ?
                new ObjectParameter("IdAsistenta", idAsistenta) :
                new ObjectParameter("IdAsistenta", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InsertZaduzenjaSaTryCatchNata_Result>("InsertZaduzenjaSaTryCatchNata", idPredmetaParameter, idProfesoraParameter, idAsistentaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<string> TryCatchPelka(Nullable<int> iDPredmeta, Nullable<int> iDProfesora, string zaduzenje)
        {
            var iDPredmetaParameter = iDPredmeta.HasValue ?
                new ObjectParameter("IDPredmeta", iDPredmeta) :
                new ObjectParameter("IDPredmeta", typeof(int));
    
            var iDProfesoraParameter = iDProfesora.HasValue ?
                new ObjectParameter("IDProfesora", iDProfesora) :
                new ObjectParameter("IDProfesora", typeof(int));
    
            var zaduzenjeParameter = zaduzenje != null ?
                new ObjectParameter("Zaduzenje", zaduzenje) :
                new ObjectParameter("Zaduzenje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("TryCatchPelka", iDPredmetaParameter, iDProfesoraParameter, zaduzenjeParameter);
        }
    
        
    
        public virtual ObjectResult<string> UnosProfesora_Dragana_try_catch(Nullable<System.Guid> iDPredmeta, Nullable<System.Guid> iDProfesora, string zaduzenje)
        {
            var iDPredmetaParameter = iDPredmeta.HasValue ?
                new ObjectParameter("IDPredmeta", iDPredmeta) :
                new ObjectParameter("IDPredmeta", typeof(System.Guid));
    
            var iDProfesoraParameter = iDProfesora.HasValue ?
                new ObjectParameter("IDProfesora", iDProfesora) :
                new ObjectParameter("IDProfesora", typeof(System.Guid));
    
            var zaduzenjeParameter = zaduzenje != null ?
                new ObjectParameter("Zaduzenje", zaduzenje) :
                new ObjectParameter("Zaduzenje", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("UnosProfesora_Dragana_try_catch", iDPredmetaParameter, iDProfesoraParameter, zaduzenjeParameter);
        }
    
        
    }
}
